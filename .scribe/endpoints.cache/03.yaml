## Autogenerated by Scribe. DO NOT MODIFY.

name: Permissions
description: |-

  APIs for managing the Permissions for users
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/permissions
    metadata:
      groupName: Permissions
      groupDescription: |-

        APIs for managing the Permissions for users
      subgroup: ''
      subgroupDescription: ''
      title: 'List all records'
      description: |-
        This endpoint allows you to list all permissions of a tenant.
        It's a really useful endpoint, and you should play around
        with it for a bit.
        <aside class='notice'>Supports json, xml, yaml, text ðŸ˜Ž</aside>
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      cursor:
        name: cursor
        description: 'Indicates where to start fetching results.'
        required: false
        example: 11
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      previous:
        name: previous
        description: 'Indicates position of result to start fetching from.'
        required: false
        example: 15
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      limit:
        name: limit
        description: 'Indicates how many records you prefer to fetch.'
        required: false
        example: 5
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanQueryParameters:
      cursor: 11
      previous: 15
      limit: 5
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: ''
        headers: []
        description: success
        custom: []
      -
        status: 403
        content: '{"data": {"type": "user","error": "Forbidden","clientIp": "127.0.0.1","datetime": "2025-01-22 20:39:28"}}'
        headers: []
        description: forbidden
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/permissions
    metadata:
      groupName: Permissions
      groupDescription: |-

        APIs for managing the Permissions for users
      subgroup: ''
      subgroupDescription: ''
      title: 'Save a single record'
      description: |-
        This endpoint allows you to save a single record for a single tenant.
        It's a really useful endpoint, and you should play around
        with it for a bit.
        <aside class='notice'>Supports json, xml, yaml ðŸ˜Ž</aside>
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: false
        example: unde
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      enabled:
        name: enabled
        description: ''
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      name: unde
      enabled: false
    fileParameters: []
    responses:
      -
        status: 200
        content: ''
        headers: []
        description: success
        custom: []
      -
        status: 403
        content: '{"data": {"type": "user","error": "Forbidden","clientIp": "127.0.0.1","datetime": "2025-01-22 20:39:28"}}'
        headers: []
        description: forbidden
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/permissions/{id}'
    metadata:
      groupName: Permissions
      groupDescription: |-

        APIs for managing the Permissions for users
      subgroup: ''
      subgroupDescription: ''
      title: 'Fetch details of one record'
      description: |-
        This endpoint allows you to fetch a single permission of a tenant.
        It's a really useful endpoint, and you should play around
        with it for a bit.
        <aside class='notice'>Supports text ðŸ˜Ž</aside>
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: ''
        required: false
        example: 4
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 4
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: ''
        headers: []
        description: success
        custom: []
      -
        status: 403
        content: '{"data": {"type": "user","error": "Forbidden","clientIp": "127.0.0.1","datetime": "2025-01-22 20:39:28"}}'
        headers: []
        description: forbidden
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/permissions/assign/{permission}'
    metadata:
      groupName: Permissions
      groupDescription: |-

        APIs for managing the Permissions for users
      subgroup: ''
      subgroupDescription: ''
      title: 'Assign a permission to a role'
      description: |-
        This endpoint allows you to assign a permission to existing role for a single tenant.
        It's a really useful endpoint, and you should play around
        with it for a bit.
        <aside class='notice'>Supports json, xml, yaml ðŸ˜Ž</aside>
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      permission:
        name: permission
        description: ''
        required: true
        example: ut
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      role:
        name: role
        description: ''
        required: false
        example: 6
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      permission: ut
      role: 6
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      permission:
        name: permission
        description: ''
        required: false
        example: ut
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      permission: ut
    fileParameters: []
    responses:
      -
        status: 200
        content: ''
        headers: []
        description: success
        custom: []
      -
        status: 403
        content: '{"data": {"type": "user","error": "Forbidden","clientIp": "127.0.0.1","datetime": "2025-01-22 20:39:28"}}'
        headers: []
        description: forbidden
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
