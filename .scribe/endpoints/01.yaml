name: Users
description: |-

  APIs for managing the User accounts
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/users
    metadata:
      groupName: Users
      groupDescription: |-

        APIs for managing the User accounts
      subgroup: ''
      subgroupDescription: ''
      title: 'List all records'
      description: |-
        This endpoint allows you to list all users of a tenant.
        It's a really useful endpoint, and you should play around
        with it for a bit.
        <aside class='notice'>Supports json, xml, yaml, text ðŸ˜Ž</aside>
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      cursor:
        name: cursor
        description: 'Indicates where to start fetching results.'
        required: false
        example: 18
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      previous:
        name: previous
        description: 'Indicates position of result to start fetching from.'
        required: false
        example: 18
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      limit:
        name: limit
        description: 'Indicates how many records you prefer to fetch.'
        required: false
        example: 13
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanQueryParameters:
      cursor: 18
      previous: 18
      limit: 13
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: ''
        headers: []
        description: success
        custom: []
      -
        status: 403
        content: '{"data": {"type": "user","error": "Forbidden","clientIp": "127.0.0.1","datetime": "2025-01-22 20:39:28"}}'
        headers: []
        description: forbidden
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/users
    metadata:
      groupName: Users
      groupDescription: |-

        APIs for managing the User accounts
      subgroup: ''
      subgroupDescription: ''
      title: 'Save a single record'
      description: |-
        This endpoint allows you to save a single record for a single tenant.
        It's a really useful endpoint, and you should play around
        with it for a bit.
        <aside class='notice'>Supports json, xml, yaml ðŸ˜Ž</aside>
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: false
        example: labore
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      email:
        name: email
        description: ''
        required: false
        example: milo.bartoletti@example.net
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      phone:
        name: phone
        description: ''
        required: false
        example: et
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      password:
        name: password
        description: ''
        required: false
        example: lgbGeosR%<`w!p1W
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      enabled:
        name: enabled
        description: ''
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      password_confirmation:
        name: password_confirmation
        description: ''
        required: false
        example: quia
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      name: labore
      email: milo.bartoletti@example.net
      phone: et
      password: lgbGeosR%<`w!p1W
      enabled: true
      password_confirmation: quia
    fileParameters: []
    responses:
      -
        status: 200
        content: ''
        headers: []
        description: success
        custom: []
      -
        status: 403
        content: '{"data": {"type": "user","error": "Forbidden","clientIp": "127.0.0.1","datetime": "2025-01-22 20:39:28"}}'
        headers: []
        description: forbidden
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/users/{id}'
    metadata:
      groupName: Users
      groupDescription: |-

        APIs for managing the User accounts
      subgroup: ''
      subgroupDescription: ''
      title: 'Fetch details of one record'
      description: |-
        This endpoint allows you to fetch a single user of a tenant.
        It's a really useful endpoint, and you should play around
        with it for a bit.
        <aside class='notice'>Supports text ðŸ˜Ž</aside>
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: ''
        required: false
        example: 7
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 7
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: ''
        headers: []
        description: success
        custom: []
      -
        status: 403
        content: '{"data": {"type": "user","error": "Forbidden","clientIp": "127.0.0.1","datetime": "2025-01-22 20:39:28"}}'
        headers: []
        description: forbidden
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: 'api/v1/users/{id}'
    metadata:
      groupName: Users
      groupDescription: |-

        APIs for managing the User accounts
      subgroup: ''
      subgroupDescription: ''
      title: 'Update a single record'
      description: |-
        This endpoint allows you to update a single record for a single tenant.
        It's a really useful endpoint, and you should play around
        with it for a bit.
        <aside class='notice'>Supports xml ðŸ˜Ž</aside>
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: ''
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: false
        example: consequuntur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      email:
        name: email
        description: ''
        required: false
        example: barton.asia@example.org
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      phone:
        name: phone
        description: ''
        required: false
        example: perferendis
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      password:
        name: password
        description: ''
        required: false
        example: 'gJuC^AX!:jm]'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      enabled:
        name: enabled
        description: ''
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      password_confirmation:
        name: password_confirmation
        description: ''
        required: false
        example: sed
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      name: consequuntur
      email: barton.asia@example.org
      phone: perferendis
      password: 'gJuC^AX!:jm]'
      enabled: false
      password_confirmation: sed
    fileParameters: []
    responses:
      -
        status: 200
        content: ''
        headers: []
        description: success
        custom: []
      -
        status: 403
        content: '{"data": {"type": "user","error": "Forbidden","clientIp": "127.0.0.1","datetime": "2025-01-22 20:39:28"}}'
        headers: []
        description: forbidden
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/users/export/csv
    metadata:
      groupName: Users
      groupDescription: |-

        APIs for managing the User accounts
      subgroup: ''
      subgroupDescription: ''
      title: 'Download a CSV dump of records'
      description: |-
        This endpoint allows you to download a csv dump of user records for a single tenant.
        It's a really useful endpoint, and you should play around
        with it for a bit.
        <aside class='notice'>Supports csv ðŸ˜Ž</aside>
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: ''
        headers: []
        description: success
        custom: []
      -
        status: 403
        content: '{"data": {"type": "user","error": "Forbidden","clientIp": "127.0.0.1","datetime": "2025-01-22 20:39:28"}}'
        headers: []
        description: forbidden
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/users/export/excel
    metadata:
      groupName: Users
      groupDescription: |-

        APIs for managing the User accounts
      subgroup: ''
      subgroupDescription: ''
      title: 'Download a Excel dump of records'
      description: |-
        This endpoint allows you to download a excel dump of user records for a single tenant.
        It's a really useful endpoint, and you should play around
        with it for a bit.
        <aside class='notice'>Supports xlsx ðŸ˜Ž</aside>
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: ''
        headers: []
        description: success
        custom: []
      -
        status: 403
        content: '{"data": {"type": "user","error": "Forbidden","clientIp": "127.0.0.1","datetime": "2025-01-22 20:39:28"}}'
        headers: []
        description: forbidden
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/users/export/pdf
    metadata:
      groupName: Users
      groupDescription: |-

        APIs for managing the User accounts
      subgroup: ''
      subgroupDescription: ''
      title: 'Download a PDF dump of records'
      description: |-
        This endpoint allows you to download a pdf dump of user records for a single tenant.
        It's a really useful endpoint, and you should play around
        with it for a bit.
        <aside class='notice'>Supports pdf ðŸ˜Ž</aside>
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: ''
        headers: []
        description: success
        custom: []
      -
        status: 403
        content: '{"data": {"type": "user","error": "Forbidden","clientIp": "127.0.0.1","datetime": "2025-01-22 20:39:28"}}'
        headers: []
        description: forbidden
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
